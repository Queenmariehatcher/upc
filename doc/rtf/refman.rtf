{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment UPC Lookup Reference Manual {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.2 \par
}}UPC Lookup}
{\comment Generated byDoxgyen. }
{\creatim \yr2008\mo5\dy7\hr19\min11\sec30}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.2\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup Main Page\par \pard\plain 
{\tc \v Main Page}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid This app requires a Google AJAX Search API Key. You can get one at {\f2 http://code.google.com/apis/ajaxsearch/signup.html}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Todo:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Make a Firefox/Greasemonkey plugin to access site if the user types in an ISBN or UPC.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Dan Keenan - {\f2 http://dankeenan.org} \par
}{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
License
\par}
{\tc\tcl2 \v License}
Copyright (C) 2008 Dan Keenan\par
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\par
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\par
You should have received a copy of the GNU General Public License along with this program. If not, see <{\f2 http://www.gnu.org/licenses/}>.\par
A {\b full text } of this license is available \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup Directory Hierarchy\par \pard\plain 
{\tc \v Directory Hierarchy}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UPC Lookup Directories\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This directory hierarchy is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
include\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UPC Lookup Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b XML} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UPC Lookup File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b index.php} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main handler file, contains all HTML code })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b upcimg.php} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an image of the barcode using Image_Barcode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b include/{\b barcode.inc} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions for the handling of different barcodes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b include/{\b form.inc} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions for outputting the Barcode entry form })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b include/{\b pear.inc} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes PEAR work with extentions installed in the home directory })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b include/{\b product.inc} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to output Product Info })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b include/{\b utils.inc} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helpful Utilities })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b include/{\b xmlparse.inc} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to parse {\b XML} data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b include/{\b xmlrpc.inc} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XML-RPC Library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup Page Index\par \pard\plain 
{\tc \v Page Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UPC Lookup Related Pages\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all related documentation pages:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Todo List\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}

License\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}

ISBNdb API\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}

Google AJAX Search API\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}

\par}\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup Directory Documentation{\tc \v Directory Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/ Directory Reference\par \pard\plain 
{\tc\tcl2 \v include/ Directory Reference}
{\xe \v include/ Directory Reference}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
\par
{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dir_1fc65542bf8a705781ea5a0b4e303822_dep.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Files\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b barcode.inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b form.inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b pear.inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b product.inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b utils.inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b xmlparse.inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b xmlrpc.inc}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
XML Class Reference\par \pard\plain 
{\tc\tcl2 \v XML}
{\xe \v XML}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XML} ($data=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b destruct} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b parse} ($data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b open} ($parser, $tag, $attributes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b data} ($parser, $data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b close} ($parser, $tag)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b $parser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b $document}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b $current}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b $parent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b $parents}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b $last_opened_tag}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 72 of file xmlrpc.inc.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v XML\:XML}
{\xe \v XML\:XML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::XML ($ {\i data} = {\f2 null})}
}\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file xmlrpc.inc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 81                           \{\par
82     $this->parser = xml_parser_create();\par
83 \par
84     xml_parser_set_option ($this->parser, XML_OPTION_CASE_FOLDING, 0);\par
85     xml_set_object($this->parser, &$this);\par
86     xml_set_element_handler($this->parser, "open", "close");\par
87     xml_set_character_data_handler($this->parser, "data");\par
88 #   register_shutdown_function(array(&$this, 'destruct'));\par
89   \}\par
}
}
{\xe \v destruct\:XML}
{\xe \v XML\:destruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::destruct ()}
}\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file xmlrpc.inc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                      \{\par
92     xml_parser_free($this->parser);\par
93   \}\par
}
}
{\xe \v parse\:XML}
{\xe \v XML\:parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::parse ($ {\i data})}
}\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file xmlrpc.inc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95                        \{\par
96     $this->document = array();\par
97     $this->parent = &$this->document;\par
98     $this->parents = array();\par
99     $this->last_opened_tag = NULL;\par
100     xml_parse($this->parser, $data);\par
101     return $this->document;\par
102   \}\par
}
}
{\xe \v open\:XML}
{\xe \v XML\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::open ($ {\i parser}, $ {\i tag}, $ {\i attributes})}
}\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file xmlrpc.inc.}\par
{
References count_numeric_items(), and data().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104                                            \{\par
105     #echo "Opening tag $tag<br>\\n";\par
106     $this->data = "";\par
107     $this->last_opened_tag = $tag; #tag is a string\par
108     if(array_key_exists($tag, $this->parent))\{\par
109       #echo "There's already an instance of '$tag' at the current level ($level)<br>\\n";\par
110       if(is_array($this->parent[$tag]) and array_key_exists(0, $this->parent[$tag]))\{ #if the keys are numeric\par
111         #need to make sure they're numeric (account for attributes)\par
112         $key = count_numeric_items($this->parent[$tag]);\par
113         #echo "There are $key instances: the keys are numeric.<br>\\n";\par
114       \}else\{\par
115         #echo "There is only one instance. Shifting everything around<br>\\n";\par
116         $temp = &$this->parent[$tag];\par
117         unset($this->parent[$tag]);\par
118         $this->parent[$tag][0] = &$temp;\par
119 \par
120         if(array_key_exists("$tag attr", $this->parent))\{\par
121           #shift the attributes around too if they exist\par
122           $temp = &$this->parent["$tag attr"];\par
123           unset($this->parent["$tag attr"]);\par
124           $this->parent[$tag]["0 attr"] = &$temp;\par
125         \}\par
126         $key = 1;\par
127       \}\par
128       $this->parent = &$this->parent[$tag];\par
129     \}else\{\par
130       $key = $tag;\par
131     \}\par
132     if($attributes)\{\par
133       $this->parent["$key attr"] = $attributes;\par
134     \}\par
135 \par
136     $this->parent[$key] = array();\par
137     $this->parent = &$this->parent[$key];\par
138     array_unshift($this->parents, &$this->parent);\par
139   \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classXML_eac7eae74d866d4f5a0cdb9be27ff279_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v data\:XML}
{\xe \v XML\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::data ($ {\i parser}, $ {\i data})}
}\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file xmlrpc.inc.}\par
{
Referenced by close(), and open().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141                                \{\par
142     #echo "Data is '", htmlspecialchars($data), "'<br>\\n";\par
143     if($this->last_opened_tag != NULL)\{\par
144       $this->data .= $data;\par
145     \}\par
146   \}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classXML_ca70dfbd3e8ce956075181701b09b033_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v close\:XML}
{\xe \v XML\:close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::close ($ {\i parser}, $ {\i tag})}
}\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file xmlrpc.inc.}\par
{
References data().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 148                                \{\par
149     #echo "Close tag $tag<br>\\n";\par
150     if($this->last_opened_tag == $tag)\{\par
151       $this->parent = $this->data;\par
152       $this->last_opened_tag = NULL;\par
153     \}\par
154     array_shift($this->parents);\par
155     $this->parent = &$this->parents[0];\par
156   \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classXML_60144a2134fc1b7f5b4b1b6a7c56bf04_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v $parser\:XML}
{\xe \v XML\:$parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::$parser}
}\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file xmlrpc.inc.}\par
}
{\xe \v $document\:XML}
{\xe \v XML\:$document}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::$document}
}\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file xmlrpc.inc.}\par
}
{\xe \v $current\:XML}
{\xe \v XML\:$current}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::$current}
}\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file xmlrpc.inc.}\par
}
{\xe \v $parent\:XML}
{\xe \v XML\:$parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::$parent}
}\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file xmlrpc.inc.}\par
}
{\xe \v $parents\:XML}
{\xe \v XML\:$parents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::$parents}
}\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file xmlrpc.inc.}\par
}
{\xe \v $last_opened_tag\:XML}
{\xe \v XML\:$last_opened_tag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XML::$last_opened_tag}
}\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file xmlrpc.inc.}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
include/{\b xmlrpc.inc}\par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
general.dox File Reference\par \pard\plain 
{\tc\tcl2 \v general.dox}
{\xe \v general.dox}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/barcode.inc File Reference\par \pard\plain 
{\tc\tcl2 \v include/barcode.inc}
{\xe \v include/barcode.inc}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions for the handling of different barcodes. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b checkBarcode} ($barcode, $type= 'upc')\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b getBarcodeInfo} ($barcode)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions for the handling of different barcodes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file currently deals with the handling of barcodes and getting the information associated with them. \par
}{
Definition in file {\b barcode.inc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v checkBarcode\:barcode.inc}
{\xe \v barcode.inc\:checkBarcode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
checkBarcode ($ {\i barcode}, $ {\i type} = {\f2 'upc'})}
}\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if a valid, handalable, barcode was entered. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i $barcode} The Barcode to be checked \par
{\i $type} = The type of barcode, either "upc" or "isbn". Defaults to what is passed in the HTTP GET information if available, otherwise assumes "upc". \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The type of barcode entered if valid, FALSE if it is not \par
}}{
Definition at line 20 of file barcode.inc.}\par
{
References XMLRPC_prepare(), and XMLRPC_request().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                                \{\par
21   if (isset($_GET['type'])) \{\par
22     $type = $_GET['type'];\par
23   \}\par
24 \par
25   switch ($type) \{\par
26     case 'upc':\par
30       $result = XMLRPC_request('dev.upcdatabase.com', '/rpc', 'lookupUPC', array(XMLRPC_prepare($barcode)));\par
31       if ($result[1] != 'Error: Invalid length') \{\par
32         if (strlen($barcode) == 12) \{\par
33           return 'upca';\par
34         \}\par
35         else if (strlen($barcode) == 13) \{\par
36           return 'ean13';\par
37         \}\par
38         else \{\par
39           return FALSE;\par
40         \}\par
41       \}\par
42       else \{\par
43         return FALSE;\par
44       \}\par
45       break;\par
46     case 'isbn':\par
47       if (strlen($barcode) == 10) \{\par
48         return 'isbn';\par
49       \}\par
50       else if (strlen($barcode) == 13) \{\par
51         return 'bookland';\par
52       \}\par
53       else \{\par
54         return FALSE;\par
55       \}\par
56       break;\par
57   \}\par
58 \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "barcode_8inc_b34ec866d27061573a5fa623bf314fc1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getBarcodeInfo\:barcode.inc}
{\xe \v barcode.inc\:getBarcodeInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
getBarcodeInfo ($ {\i barcode})}
}\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output Barcode Info {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i $barcode} The barcode to lookup \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid HTML code to create the info area \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b checkBarcode} \par
}}{
Definition at line 66 of file barcode.inc.}\par
{
References getImages(), parseXML(), XMLRPC_prepare(), and XMLRPC_request().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                   \{\par
67   switch ($_GET['type']) \{\par
68     case 'upc':\par
72       $output = '';\par
73       $output .= '<div id="upc">';\par
74       $output .= '<img src="upcimg.php?upc=' . $barcode . '" />';\par
75       $output .= '</div>';\par
76 \par
80       $result = XMLRPC_request('dev.upcdatabase.com', '/rpc', 'lookupUPC', array(XMLRPC_prepare($barcode)));\par
81 //       if ($debug) var_dump($result);\par
82       echo getImages($result[1]['description']);\par
83       if ($result[1]['found']) \{\par
84         extract($result[1], EXTR_PREFIX_ALL, 'barcode');\par
85         $output .= <<<_HTML\par
86         <div id="info">\par
87           <table align="center">\par
88             <tr>\par
89               <td class="title">Country</td>\par
90               <td>$barcode_issuerCountry</td>\par
91             </tr>\par
92             <tr>\par
93               <td class="title">Description</td>\par
94               <td>$barcode_description</td>\par
95             </tr>\par
96             <tr>\par
97               <td class="title">Size</td>\par
98               <td>$barcode_size</td>\par
99             </tr>\par
100           </table>\par
101           <a href="http://www.upcdatabase.com/editform.asp?upc=$barcode">Modify this entry</a>\par
102           <a href="http://www.upcdatabase.com/deleteform.asp?upc=$barcode">Delete this entry</a>\par
103         </div>\par
104 _HTML;\par
105       \}\par
106       else \{\par
107         $output .= 'Product Not Found!<br />';\par
108         $output .= '<a href="http://www.upcdatabase.com/addform.asp?upc=' . $barcode . '">Add this item to the database</a>';\par
109       \}\par
110       break;\par
111 \par
112     case 'isbn':\par
116       $xml = parseXML('http://isbndb.com/api/books.xml?access_key=' . ISBNKEY . '&index1=isbn&results=texts&value1=' . $barcode);\par
117 //       var_dump($xml);\par
118 \par
119       // Sometimes, the long title is non-existant, so fall back onto the short title\par
120       if (strlen($xml->BookList->BookData->TitleLong) != 0) \{\par
124         $title = $xml->BookList->BookData->TitleLong;\par
125       \}\par
126       else \{\par
130         $title = $xml->BookList->BookData->Title;\par
131       \}\par
135       $author = $xml->BookList->BookData->AuthorsText;\par
139       $publisher = $xml->BookList->BookData->PublisherText;\par
143       $summary = $xml->BookList->BookData->Summary;\par
147       $isbn = $xml->BookList->BookData['isbn'];\par
148 \par
152       $output = '';\par
153       $output .= '<div id="upc">';\par
154       $output .= '<img src="upcimg.php?upc=' . $barcode . '" />';\par
155       $output .= '</div>';\par
156       $output .= <<<_HTML\par
157       <div id="info">\par
158         <table align="center">\par
159           <tr>\par
160             <td class="title">Title</td>\par
161             <td>$title</td>\par
162           </tr>\par
163           <tr>\par
164             <td class="title">Author</td>\par
165             <td>$author</td>\par
166           </tr>\par
167           <tr>\par
168             <td class="title">Publisher</td>\par
169             <td>$publisher</td>\par
170           </tr>\par
171           <tr>\par
172             <td colspan="2">$summary</td>\par
173           </tr>\par
174           <tr>\par
175             <td class="title">Buy</td>\par
176             <td>\par
177               <!-- Amazon.com uses the ISBN-10 code, so send it that -->\par
178               <a href="http://www.amazon.com/exec/obidos/ASIN/$isbn/">Amazon.com</a><br />\par
179               <!-- Everyone else uses the ISBN-13 code, so send them that -->\par
180               <a href="http://search.barnesandnoble.com/booksearch/isbninquiry.asp?ean=$barcode">Barnes & Noble</a><br />\par
181               <a href="http://www.booksamillion.com/ncom/books?type=isbn&find=$barcode">Books-A-Million</a><br />\par
182               <a href="http://www.google.com/products?q=$barcode">Google Product Search</a>\par
183             </td>\par
184           </tr>\par
185         </table>\par
186       </div>\par
187 _HTML;\par
188       break;\par
189   \}\par
190 \par
191   return $output;\par
192 \}}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "barcode_8inc_e10c37e4f9f9b7c6617a388351a27c99_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/form.inc File Reference\par \pard\plain 
{\tc\tcl2 \v include/form.inc}
{\xe \v include/form.inc}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions for outputting the Barcode entry form. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b getEntryForm} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions for outputting the Barcode entry form. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file currently contains functions that relate to various forms. As there is currently only one form, this file may seem redundant. However, it stays for the sake of forward compatability. \par
}{
Definition in file {\b form.inc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getEntryForm\:form.inc}
{\xe \v form.inc\:getEntryForm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
getEntryForm ()}
}\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an entry form for UPCs (and eventually other types of Barcodes \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The Barcode entry form \par
}}{
Definition at line 14 of file form.inc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                         \{\par
18   $form = <<<_HTML\par
19               <form action="index.php" method="get" id="codeentry">\par
20                 <fieldset>\par
21                   <label>UPC:</label><input type="text" name="upc" /><br />\par
22                   <label class="radiolabel">UPC</label><input type="radio" checked="true" name="type" value="upc" />\par
23                   <label class="radiolabel">ISBN</label><input type="radio" name="type" value="isbn" /><br />\par
24                   <input type="submit" value="Submit" />\par
25                 </fieldset>\par
26               </form>\par
27 _HTML;\par
28 \par
29   return $form;\par
30 \}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/pear.inc File Reference\par \pard\plain 
{\tc\tcl2 \v include/pear.inc}
{\xe \v include/pear.inc}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes PEAR work with extentions installed in the home directory. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b HOME_PEAR_DIR} \par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes PEAR work with extentions installed in the home directory. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Most shared hosts do not allow user installation of system-wide PEAR extentions, so this file allows it to work with extentions installed in the user's home directory. To make this work, you need to set the HOME_PEAR_DIR constant to the path where your PEAR extentions are installed. See that documentation for more info. \par
}{
Definition in file {\b pear.inc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v HOME_PEAR_DIR\:pear.inc}
{\xe \v pear.inc\:HOME_PEAR_DIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b HOME_PEAR_DIR}}
}\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The location of PEAR extentions in the home directory. This is usually {\b /home/<username>/pear/php}  \par
}{
Definition at line 16 of file pear.inc.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/product.inc File Reference\par \pard\plain 
{\tc\tcl2 \v include/product.inc}
{\xe \v include/product.inc}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to output Product Info. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b getImages} ($product)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to output Product Info. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Various pieces of info gleamed from the web will be handled by functions contained in this file. Currently, it only handles getting product images \par
}{
Definition in file {\b product.inc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getImages\:product.inc}
{\xe \v product.inc\:getImages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
getImages ($ {\i product})}
}\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets Appropriate Images from google Image Search {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i $product} The product to get images for \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid HTML code to output product images\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Todo:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Get Book Covers for books (Items with ISBN Numbers) \par
}
}{
Definition at line 17 of file product.inc.}\par
{
References fget().}\par
{
Referenced by getBarcodeInfo().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                              \{\par
21   $json = json_decode(fget('http://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=' . urlencode($product) . '&rsz=large'));\par
22   // Hack to get Indexes working\par
23   if ($_GET['index']) \{\par
24     $currentIndex = (int) $_GET['index'];\par
25   \}\par
26   else \{\par
27     $currentIndex = 0;\par
28   \}\par
29   $prevIndex = $currentIndex - 1;\par
30   $nextIndex = $currentIndex + 1;\par
31   $i = 0;\par
32   $getText = '?';\par
33   foreach ($_GET as $item) \{\par
34     if (key($_GET) != 'index') \{\par
35       if ($i == 0) \{\par
36         $getText .= key($_GET) . '=' . $item;\par
37       \}\par
38       else \{\par
39         $getText .= '&' . key($_GET) . '=' . $item;\par
40       \}\par
41     \}\par
42     next($_GET);\par
43     $i++;\par
44   \}\par
45 \par
46   $originalContextUrl = $json->responseData->results[$currentIndex]->originalContextUrl;\par
47   $imgSrc = $json->responseData->results[$currentIndex]->tbUrl;\par
48   $visibleUrl = $json->responseData->results[$currentIndex]->visibleUrl;\par
49 \par
53   $output = "<div id=\\"prodimg\\">";\par
54   // Only display previous button if there are previous values\par
55   if ($currentIndex > 0) \{\par
56     $output .= "<a href=\\"\{$getText\}&index=\{$prevIndex\}\\"><img src=\\"images/arrows/left.png\\" alt=\\"Previous Image\\" title=\\"Previous Image\\" /></a>";\par
57   \}\par
58   $output .= "<a href=\\"\{$originalContextUrl\}\\" target=\\"_blank\\"><img src=\\"\{$imgSrc\}\\" alt=\\"Image of $product From \{$visibleUrl\}\\" title=\\"Image of $product From \{$visibleUrl\}\\" id=\\"prodimg\\"></a>";\par
59   // Only display next button if there are more images\par
60   if ($currentIndex < count($json->responseData->results) - 1) \{\par
61    $output .= "<a href=\\"\{$getText\}&index=\{$nextIndex\}\\"> <img src=\\"images/arrows/right.png\\" alt=\\"Next Image\\" title=\\"Next Image\\" /></a><br /><a href=\\"aboutimages.html\\" target=\\"_blank\\" onclick=\\"popup(this.href, 200, 300); return false;\\">About this image</a></div>";\par
62   \}\par
63 \par
64   return $output;\par
65 \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "product_8inc_9dbb778854cfe105058d7161ca8f058c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "product_8inc_9dbb778854cfe105058d7161ca8f058c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/utils.inc File Reference\par \pard\plain 
{\tc\tcl2 \v include/utils.inc}
{\xe \v include/utils.inc}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helpful Utilities. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b fget} ($url)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helpful Utilities. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These utilities are suitable to be included in any file by calling the file as follows: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  require_once 'utils.inc'\par
}
 \par
}{
Definition in file {\b utils.inc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fget\:utils.inc}
{\xe \v utils.inc\:fget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fget ($ {\i url})}
}\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Download a {\b text}  file using cURL {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i $url} The URL to download \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A string containging the text file \par
}}{
Definition at line 16 of file utils.inc.}\par
{
Referenced by getImages(), and parseXML().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                     \{\par
20   $curl = curl_init($url);\par
21 \par
22   curl_setopt_array($curl, array(\par
23     CURLOPT_REFERER => $_ENV['SCRIPT_URI'],\par
24     CURLOPT_FAILONERROR => TRUE,\par
25     CURLOPT_RETURNTRANSFER => 1,\par
26     CURLOPT_CLOSEPOLICY => CURLCLOSEPOLICY_LEAST_RECENTLY_USED,\par
27   ));\par
28 \par
32   $file = curl_exec($curl);\par
33   curl_close($curl);\par
34 \par
35   return $file;\par
36 \}}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "utils_8inc_846199262ea0cd07e0531f38d26dd9b3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/xmlparse.inc File Reference\par \pard\plain 
{\tc\tcl2 \v include/xmlparse.inc}
{\xe \v include/xmlparse.inc}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to parse {\b XML} data. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b parseXML} ($url)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to parse {\b XML} data. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Functions to parse {\b XML} data. Specifaclly created for use with isbndb.com \par
}{
Definition in file {\b xmlparse.inc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v parseXML\:xmlparse.inc}
{\xe \v xmlparse.inc\:parseXML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
parseXML ($ {\i url})}
}\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse {\b XML} Data from the given URL {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i $url} Location of {\b XML} data \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Object containing parsed {\b XML} data \par
}}{
Definition at line 15 of file xmlparse.inc.}\par
{
References fget().}\par
{
Referenced by getBarcodeInfo().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                         \{\par
19   $xmlstr = fget($url);\par
23   $xml = new SimpleXMLElement($xmlstr);\par
24 \par
25   return $xml;\par
26 \}}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlparse_8inc_2ee17c038e8fe8a1ddc86bb533863cb7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlparse_8inc_2ee17c038e8fe8a1ddc86bb533863cb7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/xmlrpc.inc File Reference\par \pard\plain 
{\tc\tcl2 \v include/xmlrpc.inc}
{\xe \v include/xmlrpc.inc}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XML-RPC Library. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b XML}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
& {\b XML_serialize} (&$data, $level=0, $prior_key=NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
& {\b XML_unserialize} (&$xml)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
& {\b XMLRPC_parse} (&$request)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
& {\b XMLRPC_prepare} ($data, $type=NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
& {\b XMLRPC_adjustValue} (&$current_node)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_getParams} ($request)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_getMethodName} ($methodCall)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_request} ($site, $location, $methodName, $params=NULL, $user_agent=NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_response} ($return_value, $server=NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_error} ($faultCode, $faultString, $server=NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_convert_timestamp_to_iso8601} ($timestamp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_convert_iso8601_to_timestamp} ($iso8601)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b count_numeric_items} (&$array)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_debug} ($function_name, $debug_message)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_debug_print} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b XMLRPC_show} ($data, $func="print_r", $return_str=false)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XML-RPC Library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XML-RPC implementation by Keith Devens, version 2.5f. {\f2 http://www.keithdevens.com/software/xmlrpc/} Release history available at: {\f2 http://www.keithdevens.com/software/xmlrpc/history/} This code is Open Source, released under terms similar to the Artistic License. Read the license at {\f2 http://www.keithdevens.com/software/license/} Note: this code requires version 4.1.0 or higher of PHP.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\f2 http://keithdevens.com/software/xmlrpc} \par
}}{
Definition in file {\b xmlrpc.inc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v count_numeric_items\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:count_numeric_items}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
count_numeric_items (&$ {\i array})}
}\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 465 of file xmlrpc.inc.}\par
{
Referenced by XML::open(), and XMLRPC_prepare().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 465                                      \{\par
466   return is_array($array) ? count(array_filter(array_keys($array), 'is_numeric')) : 0;\par
467 \}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_88839ba2c5c835c99f55578c65faa401_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XML_serialize\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XML_serialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
& XML_serialize (&$ {\i data}, $ {\i level} = {\f2 0}, $ {\i prior_key} = {\f2 NULL})}
}\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file xmlrpc.inc.}\par
{
Referenced by XMLRPC_error(), XMLRPC_request(), and XMLRPC_response().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                                \{\par
18   #assumes a hash, keys are the variable names\par
19   $xml_serialized_string = "";\par
20   while(list($key, $value) = each($data))\{\par
21     $inline = false;\par
22     $numeric_array = false;\par
23     $attributes = "";\par
24     #echo "My current key is '$key', called with prior key '$prior_key'<br>";\par
25     if(!strstr($key, " attr"))\{ #if it's not an attribute\par
26       if(array_key_exists("$key attr", $data))\{\par
27         while(list($attr_name, $attr_value) = each($data["$key attr"]))\{\par
28           #echo "Found attribute $attribute_name with value $attribute_value<br>";\par
29           $attr_value = &htmlspecialchars($attr_value, ENT_QUOTES);\par
30           $attributes .= " $attr_name=\\"$attr_value\\"";\par
31         \}\par
32       \}\par
33 \par
34       if(is_numeric($key))\{\par
35         #echo "My current key ($key) is numeric. My parent key is '$prior_key'<br>";\par
36         $key = $prior_key;\par
37       \}else\{\par
38         #you can't have numeric keys at two levels in a row, so this is ok\par
39         #echo "Checking to see if a numeric key exists in data.";\par
40         if(is_array($value) and array_key_exists(0, $value))\{\par
41         # echo " It does! Calling myself as a result of a numeric array.<br>";\par
42           $numeric_array = true;\par
43           $xml_serialized_string .= XML_serialize($value, $level, $key);\par
44         \}\par
45         #echo "<br>";\par
46       \}\par
47 \par
48       if(!$numeric_array)\{\par
49         $xml_serialized_string .= str_repeat("\\t", $level) . "<$key$attributes>";\par
50 \par
51         if(is_array($value))\{\par
52           $xml_serialized_string .= "\\r\\n" . XML_serialize($value, $level+1);\par
53         \}else\{\par
54           $inline = true;\par
55           $xml_serialized_string .= htmlspecialchars($value);\par
56         \}\par
57 \par
58         $xml_serialized_string .= (!$inline ? str_repeat("\\t", $level) : "") . "</$key>\\r\\n";\par
59       \}\par
60     \}else\{\par
61       #echo "Skipping attribute record for key $key<bR>";\par
62     \}\par
63   \}\par
64   if($level == 0)\{\par
65     $xml_serialized_string = "<?xml version=\\"1.0\\" ?>\\r\\n" . $xml_serialized_string;\par
66     return $xml_serialized_string;\par
67   \}else\{\par
68     return $xml_serialized_string;\par
69   \}\par
70 \}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_a1e9b05a06f28fabb86c10129f5890ef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XML_unserialize\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XML_unserialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
& XML_unserialize (&$ {\i xml})}
}\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file xmlrpc.inc.}\par
{
Referenced by XMLRPC_parse(), and XMLRPC_request().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 159                                  \{\par
160   $xml_parser = new XML();\par
161   $data = &$xml_parser->parse(&$xml);\par
162   $xml_parser->destruct();\par
163   return $data;\par
164 \}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_ef8f3de498a12b230d049cdee6a25145_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_adjustValue\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_adjustValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
& XMLRPC_adjustValue (&$ {\i current_node})}
}\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 237 of file xmlrpc.inc.}\par
{
Referenced by XMLRPC_getParams(), and XMLRPC_request().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 237                                              \{\par
238   if(is_array($current_node))\{\par
239     if(isset($current_node['array']))\{\par
240       if(!is_array($current_node['array']['data']))\{\par
241         #If there are no elements, return an empty array\par
242         return array();\par
243       \}else\{\par
244         #echo "Getting rid of array -> data -> value<br>\\n";\par
245         $temp = &$current_node['array']['data']['value'];\par
246         if(is_array($temp) and array_key_exists(0, $temp))\{\par
247           $count = count($temp);\par
248           for($n=0;$n<$count;$n++)\{\par
249             $temp2[$n] = &XMLRPC_adjustValue(&$temp[$n]);\par
250           \}\par
251           $temp = &$temp2;\par
252         \}else\{\par
253           $temp2 = &XMLRPC_adjustValue(&$temp);\par
254           $temp = array(&$temp2);\par
255           #I do the temp assignment because it avoids copying,\par
256           # since I can put a reference in the array\par
257           #PHP's reference model is a bit silly, and I can't just say:\par
258           # $temp = array(&XMLRPC_adjustValue(&$temp));\par
259         \}\par
260       \}\par
261     \}elseif(isset($current_node['struct']))\{\par
262       if(!is_array($current_node['struct']))\{\par
263         #If there are no members, return an empty array\par
264         return array();\par
265       \}else\{\par
266         #echo "Getting rid of struct -> member<br>\\n";\par
267         $temp = &$current_node['struct']['member'];\par
268         if(is_array($temp) and array_key_exists(0, $temp))\{\par
269           $count = count($temp);\par
270           for($n=0;$n<$count;$n++)\{\par
271             #echo "Passing name \{$temp[$n][name]\}. Value is: " . show($temp[$n][value], var_dump, true) . "<br>\\n";\par
272             $temp2[$temp[$n]['name']] = &XMLRPC_adjustValue(&$temp[$n]['value']);\par
273             #echo "adjustValue(): After assigning, the value is " . show($temp2[$temp[$n]['name']], var_dump, true) . "<br>\\n";\par
274           \}\par
275         \}else\{\par
276           #echo "Passing name $temp[name]<br>\\n";\par
277           $temp2[$temp['name']] = &XMLRPC_adjustValue(&$temp['value']);\par
278         \}\par
279         $temp = &$temp2;\par
280       \}\par
281     \}else\{\par
282       $types = array('string', 'int', 'i4', 'double', 'dateTime.iso8601', 'base64', 'boolean');\par
283       $fell_through = true;\par
284       foreach($types as $type)\{\par
285         if(array_key_exists($type, $current_node))\{\par
286           #echo "Getting rid of '$type'<br>\\n";\par
287           $temp = &$current_node[$type];\par
288           #echo "adjustValue(): The current node is set with a type of $type<br>\\n";\par
289           $fell_through = false;\par
290           break;\par
291         \}\par
292       \}\par
293       if($fell_through)\{\par
294         $type = 'string';\par
295         #echo "Fell through! Type is $type<br>\\n";\par
296       \}\par
297       switch ($type)\{\par
298         case 'int': case 'i4': $temp = (int)$temp;    break;\par
299         case 'string':         $temp = (string)$temp; break;\par
300         case 'double':         $temp = (double)$temp; break;\par
301         case 'boolean':        $temp = (bool)$temp;   break;\par
302       \}\par
303     \}\par
304   \}else\{\par
305     $temp = (string)$current_node;\par
306   \}\par
307   return $temp;\par
308 \}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_d936fe41ae9c3e0b90bd72ffe82a2969_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_convert_iso8601_to_timestamp\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_convert_iso8601_to_timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_convert_iso8601_to_timestamp ($ {\i iso8601})}
}\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 461 of file xmlrpc.inc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 461                                                       \{\par
462   return strtotime($iso8601);\par
463 \}\par
}
}
{\xe \v XMLRPC_convert_timestamp_to_iso8601\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_convert_timestamp_to_iso8601}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_convert_timestamp_to_iso8601 ($ {\i timestamp})}
}\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 455 of file xmlrpc.inc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 455                                                         \{\par
456   #takes a unix timestamp and converts it to iso8601 required by XMLRPC\par
457   #an example iso8601 datetime is "20010822T03:14:33"\par
458   return date("Ymd\\TH:i:s", $timestamp);\par
459 \}\par
}
}
{\xe \v XMLRPC_debug\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_debug ($ {\i function_name}, $ {\i debug_message})}
}\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 469 of file xmlrpc.inc.}\par
{
Referenced by XMLRPC_error(), XMLRPC_parse(), XMLRPC_request(), and XMLRPC_response().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 469                                                      \{\par
470   $GLOBALS['XMLRPC_DEBUG_INFO'][] = array($function_name, $debug_message);\par
471 \}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_e2d2e97a8c1c560f5e96d58d60a02874_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_debug_print\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_debug_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_debug_print ()}
}\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 473 of file xmlrpc.inc.}\par
{
References $debug.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 473                              \{\par
474   if($GLOBALS['XMLRPC_DEBUG_INFO'])\{\par
475     echo "<table border=\\"1\\" width=\\"100%\\">\\n";\par
476     foreach($GLOBALS['XMLRPC_DEBUG_INFO'] as $debug)\{\par
477       echo "<tr><th style=\\"vertical-align: top\\">$debug[0]</th><td>$debug[1]</td></tr>\\n";\par
478     \}\par
479     echo "</table>\\n";\par
480     unset($GLOBALS['XMLRPC_DEBUG_INFO']);\par
481   \}else\{\par
482     echo "<p>No debugging information available yet.</p>";\par
483   \}\par
484 \}\par
}
}
{\xe \v XMLRPC_error\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_error ($ {\i faultCode}, $ {\i faultString}, $ {\i server} = {\f2 NULL})}
}\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 432 of file xmlrpc.inc.}\par
{
References XML_serialize(), XMLRPC_debug(), and XMLRPC_show().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 432                                                                \{\par
433   $array["methodResponse"]["fault"]["value"]["struct"]["member"] = array();\par
434   $temp = &$array["methodResponse"]["fault"]["value"]["struct"]["member"];\par
435   $temp[0]["name"] = "faultCode";\par
436   $temp[0]["value"]["int"] = $faultCode;\par
437   $temp[1]["name"] = "faultString";\par
438   $temp[1]["value"]["string"] = $faultString;\par
439 \par
440   $return = XML_serialize($array);\par
441 \par
442   header("Connection: close");\par
443   header("Content-Length: " . strlen($return));\par
444   header("Content-Type: text/xml");\par
445   header("Date: " . date("r"));\par
446   if($server)\{\par
447     header("Server: $server");\par
448   \}\par
449   if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
450     XMLRPC_debug('XMLRPC_error', "<p>Sent the following error response:</p>\\n\\n" . XMLRPC_show($return, 'print_r', true));\par
451   \}\par
452   echo $return;\par
453 \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_0cdc54b1376ccbbe412175c9819a95ac_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_getMethodName\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_getMethodName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_getMethodName ($ {\i methodCall})}
}\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 331 of file xmlrpc.inc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 331                                           \{\par
332   #returns the method name\par
333   return $methodCall['methodCall']['methodName'];\par
334 \}\par
}
}
{\xe \v XMLRPC_getParams\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_getParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_getParams ($ {\i request})}
}\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 310 of file xmlrpc.inc.}\par
{
References XMLRPC_adjustValue().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 310                                    \{\par
311   if(!is_array($request['methodCall']['params']))\{\par
312     #If there are no parameters, return an empty array\par
313     return array();\par
314   \}else\{\par
315     #echo "Getting rid of methodCall -> params -> param<br>\\n";\par
316     $temp = &$request['methodCall']['params']['param'];\par
317     if(is_array($temp) and array_key_exists(0, $temp))\{\par
318       $count = count($temp);\par
319       for($n = 0; $n < $count; $n++)\{\par
320         #echo "Serializing parameter $n<br>";\par
321         $temp2[$n] = &XMLRPC_adjustValue(&$temp[$n]['value']);\par
322       \}\par
323     \}else\{\par
324       $temp2[0] = &XMLRPC_adjustValue($temp['value']);\par
325     \}\par
326     $temp = &$temp2;\par
327     return $temp;\par
328   \}\par
329 \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_ce4ea8e1274ca2ee3f51ec5a724f00f3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_parse\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
& XMLRPC_parse (&$ {\i request})}
}\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 166 of file xmlrpc.inc.}\par
{
References XML_unserialize(), XMLRPC_debug(), and XMLRPC_show().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 166                                   \{\par
167   if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
168     XMLRPC_debug('XMLRPC_parse', "<p>Received the following raw request:</p>" . XMLRPC_show($request, 'print_r', true));\par
169   \}\par
170   $data = &XML_unserialize(&$request);\par
171   if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
172     XMLRPC_debug('XMLRPC_parse', "<p>Returning the following parsed request:</p>" . XMLRPC_show($data, 'print_r', true));\par
173   \}\par
174   return $data;\par
175 \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_708b2136ca600664d2207a511b3cf3f8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_prepare\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_prepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
& XMLRPC_prepare ($ {\i data}, $ {\i type} = {\f2 NULL})}
}\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 177 of file xmlrpc.inc.}\par
{
References count_numeric_items().}\par
{
Referenced by checkBarcode(), and getBarcodeInfo().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 177                                               \{\par
178   if(is_array($data))\{\par
179     $num_elements = count($data);\par
180     if((array_key_exists(0, $data) or !$num_elements) and $type != 'struct')\{ #it's an array\par
181       if(!$num_elements)\{ #if the array is empty\par
182         $returnvalue =  array('array' => array('data' => NULL));\par
183       \}else\{\par
184         $returnvalue['array']['data']['value'] = array();\par
185         $temp = &$returnvalue['array']['data']['value'];\par
186         $count = count_numeric_items($data);\par
187         for($n=0; $n<$count; $n++)\{\par
188           $type = NULL;\par
189           if(array_key_exists("$n type", $data))\{\par
190             $type = $data["$n type"];\par
191           \}\par
192           $temp[$n] = XMLRPC_prepare(&$data[$n], $type);\par
193         \}\par
194       \}\par
195     \}else\{ #it's a struct\par
196       if(!$num_elements)\{ #if the struct is empty\par
197         $returnvalue = array('struct' => NULL);\par
198       \}else\{\par
199         $returnvalue['struct']['member'] = array();\par
200         $temp = &$returnvalue['struct']['member'];\par
201         while(list($key, $value) = each($data))\{\par
202           if(substr($key, -5) != ' type')\{ #if it's not a type specifier\par
203             $type = NULL;\par
204             if(array_key_exists("$key type", $data))\{\par
205               $type = $data["$key type"];\par
206             \}\par
207             $temp[] = array('name' => $key, 'value' => XMLRPC_prepare(&$value, $type));\par
208           \}\par
209         \}\par
210       \}\par
211     \}\par
212   \}else\{ #it's a scalar\par
213     if(!$type)\{\par
214       if(is_int($data))\{\par
215         $returnvalue['int'] = $data;\par
216         return $returnvalue;\par
217       \}elseif(is_float($data))\{\par
218         $returnvalue['double'] = $data;\par
219         return $returnvalue;\par
220       \}elseif(is_bool($data))\{\par
221         $returnvalue['boolean'] = ($data ? 1 : 0);\par
222         return $returnvalue;\par
223       \}elseif(preg_match('/^\\d\{8\}T\\d\{2\}:\\d\{2\}:\\d\{2\}$/', $data, $matches))\{ #it's a date\par
224         $returnvalue['dateTime.iso8601'] = $data;\par
225         return $returnvalue;\par
226       \}elseif(is_string($data))\{\par
227         $returnvalue['string'] = htmlspecialchars($data);\par
228         return $returnvalue;\par
229       \}\par
230     \}else\{\par
231       $returnvalue[$type] = htmlspecialchars($data);\par
232     \}\par
233   \}\par
234   return $returnvalue;\par
235 \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_c13be54b26e0803d8745e4f019dcfd8a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_c13be54b26e0803d8745e4f019dcfd8a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_request\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_request}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_request ($ {\i site}, $ {\i location}, $ {\i methodName}, $ {\i params} = {\f2 NULL}, $ {\i user_agent} = {\f2 NULL})}
}\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 336 of file xmlrpc.inc.}\par
{
References XML_serialize(), XML_unserialize(), XMLRPC_adjustValue(), XMLRPC_debug(), and XMLRPC_show().}\par
{
Referenced by checkBarcode(), and getBarcodeInfo().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 336                                                                                           \{\par
337   $site = explode(':', $site);\par
338   if(isset($site[1]) and is_numeric($site[1]))\{\par
339     $port = $site[1];\par
340   \}else\{\par
341     $port = 80;\par
342   \}\par
343   $site = $site[0];\par
344 \par
345   $data["methodCall"]["methodName"] = $methodName;\par
346   $param_count = count($params);\par
347   if(!$param_count)\{\par
348     $data["methodCall"]["params"] = NULL;\par
349   \}else\{\par
350     for($n = 0; $n<$param_count; $n++)\{\par
351       $data["methodCall"]["params"]["param"][$n]["value"] = $params[$n];\par
352     \}\par
353   \}\par
354   $data = XML_serialize($data);\par
355 \par
356   if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
357     XMLRPC_debug('XMLRPC_request', "<p>Received the following parameter list to send:</p>" . XMLRPC_show($params, 'print_r', true));\par
358   \}\par
359   $conn = fsockopen ($site, $port); #open the connection\par
360   if(!$conn)\{ #if the connection was not opened successfully\par
361     if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
362       XMLRPC_debug('XMLRPC_request', "<p>Connection failed: Couldn't make the connection to $site.</p>");\par
363     \}\par
364     return array(false, array('faultCode'=>10532, 'faultString'=>"Connection failed: Couldn't make the connection to $site."));\par
365   \}else\{\par
366     $headers =\par
367       "POST $location HTTP/1.0\\r\\n" .\par
368       "Host: $site\\r\\n" .\par
369       "Connection: close\\r\\n" .\par
370       ($user_agent ? "User-Agent: $user_agent\\r\\n" : '') .\par
371       "Content-Type: text/xml\\r\\n" .\par
372       "Content-Length: " . strlen($data) . "\\r\\n\\r\\n";\par
373 \par
374     fputs($conn, "$headers");\par
375     fputs($conn, $data);\par
376 \par
377     if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
378       XMLRPC_debug('XMLRPC_request', "<p>Sent the following request:</p>\\n\\n" . XMLRPC_show($headers . $data, 'print_r', true));\par
379     \}\par
380 \par
381     #socket_set_blocking ($conn, false);\par
382     $response = "";\par
383     while(!feof($conn))\{\par
384       $response .= fgets($conn, 1024);\par
385     \}\par
386     fclose($conn);\par
387 \par
388     #strip headers off of response\par
389     $data = XML_unserialize(substr($response, strpos($response, "\\r\\n\\r\\n")+4));\par
390 \par
391     if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
392       XMLRPC_debug('XMLRPC_request', "<p>Received the following response:</p>\\n\\n" . XMLRPC_show($response, 'print_r', true) . "<p>Which was serialized into the following data:</p>\\n\\n" . XMLRPC_show($data, 'print_r', true));\par
393     \}\par
394     if(isset($data['methodResponse']['fault']))\{\par
395       $return =  array(false, XMLRPC_adjustValue(&$data['methodResponse']['fault']['value']));\par
396       if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
397         XMLRPC_debug('XMLRPC_request', "<p>Returning:</p>\\n\\n" . XMLRPC_show($return, 'var_dump', true));\par
398       \}\par
399       return $return;\par
400     \}else\{\par
401       $return = array(true, XMLRPC_adjustValue(&$data['methodResponse']['params']['param']['value']));\par
402       if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
403         XMLRPC_debug('XMLRPC_request', "<p>Returning:</p>\\n\\n" . XMLRPC_show($return, 'var_dump', true));\par
404       \}\par
405       return $return;\par
406     \}\par
407   \}\par
408 \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_3a98b6984b8ca01752d1aa9a267526a3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_3a98b6984b8ca01752d1aa9a267526a3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_response\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_response}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_response ($ {\i return_value}, $ {\i server} = {\f2 NULL})}
}\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 410 of file xmlrpc.inc.}\par
{
References XML_serialize(), XMLRPC_debug(), and XMLRPC_show().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 410                                                        \{\par
411   $data["methodResponse"]["params"]["param"]["value"] = &$return_value;\par
412   $return = XML_serialize(&$data);\par
413 \par
414   if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
415     XMLRPC_debug('XMLRPC_response', "<p>Received the following data to return:</p>\\n\\n" . XMLRPC_show($return_value, 'print_r', true));\par
416   \}\par
417 \par
418   header("Connection: close");\par
419   header("Content-Length: " . strlen($return));\par
420   header("Content-Type: text/xml");\par
421   header("Date: " . date("r"));\par
422   if($server)\{\par
423     header("Server: $server");\par
424   \}\par
425 \par
426   if(defined('XMLRPC_DEBUG') and XMLRPC_DEBUG)\{\par
427     XMLRPC_debug('XMLRPC_response', "<p>Sent the following response:</p>\\n\\n" . XMLRPC_show($return, 'print_r', true));\par
428   \}\par
429   echo $return;\par
430 \}\par
}
\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_c736d378caaccdd0726ea1080d1f526f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v XMLRPC_show\:xmlrpc.inc}
{\xe \v xmlrpc.inc\:XMLRPC_show}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
XMLRPC_show ($ {\i data}, $ {\i func} = {\f2 "print_r"}, $ {\i return_str} = {\f2 false})}
}\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 486 of file xmlrpc.inc.}\par
{
Referenced by XMLRPC_error(), XMLRPC_parse(), XMLRPC_request(), and XMLRPC_response().}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 486                                                                    \{\par
487   ob_start();\par
488   $func($data);\par
489   $output = ob_get_contents();\par
490   ob_end_clean();\par
491   if($return_str)\{\par
492     return "<pre>" . htmlspecialchars($output) . "</pre>\\n";\par
493   \}else\{\par
494     echo "<pre>", htmlspecialchars($output), "</pre>\\n";\par
495   \}\par
496 \}\par
}
\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "xmlrpc_8inc_1f60d2672bcb35f5ff908f64931f8d48_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
index.php File Reference\par \pard\plain 
{\tc\tcl2 \v index.php}
{\xe \v index.php}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main handler file, contains all HTML code. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b APIKEY} \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ISBNKEY} \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b $debug} = FALSE\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main handler file, contains all HTML code. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the main output file, the file that calls all other functions. This file should not need to be modified very often. \par
}{
Definition in file {\b index.php}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v APIKEY\:index.php}
{\xe \v index.php\:APIKEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b APIKEY}}
}\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Google AJAX search API key \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\f2 http://code.google.com/apis/ajaxsearch/signup.html} \par
}}{
Definition at line 27 of file index.php.}\par
}
{\xe \v ISBNKEY\:index.php}
{\xe \v index.php\:ISBNKEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b ISBNKEY}}
}\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
isbndb.com API key \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\f2 https://isbndb.com/account/dev/keys/generate.html} \par
}}{
Definition at line 32 of file index.php.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v $debug\:index.php}
{\xe \v index.php\:$debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
$debug = FALSE}
}\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set to TRUE to output debug info \par
}{
Definition at line 22 of file index.php.}\par
{
Referenced by XMLRPC_debug_print().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
isbnapi.dox File Reference\par \pard\plain 
{\tc\tcl2 \v isbnapi.dox}
{\xe \v isbnapi.dox}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
searchapi.dox File Reference\par \pard\plain 
{\tc\tcl2 \v searchapi.dox}
{\xe \v searchapi.dox}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
upcimg.php File Reference\par \pard\plain 
{\tc\tcl2 \v upcimg.php}
{\xe \v upcimg.php}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an image of the barcode using Image_Barcode. \par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an image of the barcode using Image_Barcode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses the PHP Imagage_Barcode Extention to generate barcode images for the entered barcode. This may need to be (it can't cause any harm) used in compination with {\b pear.inc} on shared hosts and other environments. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\f2 http://pear.php.net/package/Image_Barcode} \par
{\f2 http://pear.php.net/manual/en/package.images.image-barcode.php} \par
}}{
Definition in file {\b upcimg.php}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup Example Documentation{\tc \v Example Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
searchexample.html\par \pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an example page that uses the Google Search API. The code (except for this comment block), was copied from the Google Page on the subject. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\f2 http://code.google.com/apis/ajaxsearch/documentation/#The_Hello_World_of_Google_Search} \par
{\f2 http://code.google.com/apis/ajaxsearch/documentation/} \par
{\f2 http://code.google.com/apis/ajaxsearch/documentation/#fonje}\par
}{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\par
2 <html xmlns="http://www.w3.org/1999/xhtml">\par
3   <head>\par
4     <title>My Google AJAX Search API Application</title>\par
5     <script src="http://www.google.com/jsapi?key=ABQIAAAAEmJBx7wui2me6l65B9cbGxSgpExuB0qMRQJK1CqbTmGBEUmrHxTWS-jq0HtIRjmBHjux30WT0zQnaQ" type="text/javascript"></script>\par
6     <script language="Javascript" type="text/javascript">\par
7     //<![CDATA[\par
8 \par
9     google.load("search", "1");\par
10 \par
11     function OnLoad() \{\par
12       // Create a search control\par
13       var searchControl = new google.search.SearchControl();\par
14 \par
15       // Add in a full set of searchers\par
16       var localSearch = new google.search.LocalSearch();\par
17       searchControl.addSearcher(localSearch);\par
18       searchControl.addSearcher(new google.search.WebSearch());\par
19       searchControl.addSearcher(new google.search.VideoSearch());\par
20       searchControl.addSearcher(new google.search.BlogSearch());\par
21 \par
22       // Set the Local Search center point\par
23       localSearch.setCenterPoint("New York, NY");\par
24 \par
25       // Tell the searcher to draw itself and tell it where to attach\par
26       searchControl.draw(document.getElementById("searchcontrol"));\par
27 \par
28       // Execute an inital search\par
29       searchControl.execute("Google");\par
30     \}\par
31     google.setOnLoadCallback(OnLoad);\par
32 \par
33     //]]>\par
34     </script>\par
35   </head>\par
36   <body>\par
37     <div id="searchcontrol">Loading...</div>\par
38   </body>\par
39 </html>\par
\par}
 \par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UPC Lookup Page Documentation{\tc \v Page Documentation}
\par \pard\plain 
{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid {\tc\tcl2 \v Todo List}
Todo List\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
}{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
page {\b Main Page}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Make a Firefox/Greasemonkey plugin to access site if the user types in an ISBN or UPC.\par
\par}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\b getImages}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Get Book Covers for books (Items with ISBN Numbers) \par}
}}
{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid {\tc\tcl2 \v License}
License\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
}{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
 GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007\par
Copyright (C) 2007 Free Software Foundation, Inc. <{\f2 http://fsf.org/}> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\par
Preamble\par
The GNU General Public License is a free, copyleft license for software and other kinds of works.\par
The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too.\par
When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\par
To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.\par
For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\par
Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.\par
For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.\par
Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.\par
Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free.\par
The precise terms and conditions for copying, distribution and modification follow.\par
TERMS AND CONDITIONS\par
0. Definitions.\par
"This License" refers to version 3 of the GNU General Public License.\par
"Copyright" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\par
"The Program" refers to any copyrightable work licensed under this License. Each licensee is addressed as "you". "Licensees" and "recipients" may be individuals or organizations.\par
To "modify" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a "modified version" of the earlier work or a work "based on" the earlier work.\par
A "covered work" means either the unmodified Program or a work based on the Program.\par
To "propagate" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\par
To "convey" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\par
An interactive user interface displays "Appropriate Legal Notices" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\par
1. Source Code.\par
The "source code" for a work means the preferred form of the work for making modifications to it. "Object code" means any non-source form of a work.\par
A "Standard Interface" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\par
The "System Libraries" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A "Major Component", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\par
The "Corresponding Source" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\par
The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\par
The Corresponding Source for a work in source code form is that same work.\par
2. Basic Permissions.\par
All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\par
You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\par
Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\par
3. Protecting Users' Legal Rights From Anti-Circumvention Law.\par
No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\par
When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.\par
4. Conveying Verbatim Copies.\par
You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\par
You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\par
5. Conveying Modified Source Versions.\par
You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\par
a) The work must carry prominent notices stating that you modified it, and giving a relevant date.\par
b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to "keep intact all notices".\par
c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.\par
d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.\par
A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an "aggregate" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\par
6. Conveying Non-Source Forms.\par
You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\par
a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.\par
b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.\par
c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.\par
d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.\par
e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.\par
A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\par
A "User Product" is either (1) a "consumer product", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, "normally used" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\par
"Installation Information" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\par
If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\par
The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\par
Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\par
7. Additional Terms.\par
"Additional permissions" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\par
When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\par
Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\par
a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or\par
b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or\par
c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or\par
d) Limiting the use for publicity purposes of names of licensors or authors of the material; or\par
e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or\par
f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.\par
All other non-permissive additional terms are considered "further restrictions" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\par
If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\par
Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\par
8. Termination.\par
You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\par
However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\par
Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\par
Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\par
9. Acceptance Not Required for Having Copies.\par
You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\par
10. Automatic Licensing of Downstream Recipients.\par
Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\par
An "entity transaction" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\par
You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\par
11. Patents.\par
A "contributor" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's "contributor version".\par
A contributor's "essential patent claims" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, "control" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\par
Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\par
In the following three paragraphs, a "patent license" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To "grant" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\par
If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. "Knowingly relying" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\par
If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\par
A patent license is "discriminatory" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\par
Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\par
12. No Surrender of Others' Freedom.\par
If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\par
13. Use with the GNU Affero General Public License.\par
Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.\par
14. Revised Versions of this License.\par
The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\par
Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License "or any later version" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.\par
If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\par
Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\par
15. Disclaimer of Warranty.\par
THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\par
16. Limitation of Liability.\par
IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\par
17. Interpretation of Sections 15 and 16.\par
If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\par
END OF TERMS AND CONDITIONS\par
How to Apply These Terms to Your New Programs\par
If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\par
To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the "copyright" line and a pointer to where the full notice is found.\par
<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author>\par
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\par
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\par
You should have received a copy of the GNU General Public License along with this program. If not, see <{\f2 http://www.gnu.org/licenses/}>.\par
Also add information on how to contact you by electronic and paper mail.\par
If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:\par
<program> Copyright ; <year> <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.\par
The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an "about box".\par
You should also get your employer (if you work as a programmer) or school, if any, to sign a "copyright disclaimer" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <{\f2 http://www.gnu.org/licenses/}>.\par
The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read <{\f2 http://www.gnu.org/philosophy/why-not-lgpl.html}>. \par
}}
{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid {\tc\tcl2 \v ISBNdb API}
ISBNdb API\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
}{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid You {\b must}  create an API Key at {\f2 https://isbndb.com/account/dev/keys/generate.html} before you can use this function.\par
}All calls to the API return data in an {\b XML} format. A request of {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  http://isbndb.com/api/books.xml?access_key=12345678&index1=isbn&value1=0596002068\par
}
 would return the following: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  <?xml version="1.0" encoding="UTF-8"?>\par
 <ISBNdb server_time="2005-02-25T23:03:41">\par
  <BookList total_results="1" page_size="10" page_number="1" shown_results="1">\par
   <BookData book_id="somebook" isbn="0123456789">\par
    <Title>Interesting Book</Title>\par
    <TitleLong>Interesting Book: Read it or else..</TitleLong>\par
    <AuthorsText>John Doe</AuthorsText>\par
    <PublisherText>Acme Publishing</PublisherText>\par
   </BookData>\par
  </BookList>\par
 </ISBNdb>\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\f2 https://isbndb.com/docs/api/} \par
{\f2 https://isbndb.com/} \par
}}}
{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid {\tc\tcl2 \v Google AJAX Search API}
Google AJAX Search API\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
}{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
About
\par}
{\tc\tcl2 \v About}
The Google AJAX Search API is used to fetch product images. You can get an API key at {\f2 http://code.google.com/apis/ajaxsearch/signup.html} \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}